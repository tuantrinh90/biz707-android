- Layout:

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:id="@+id/container"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical">

    <PagingListView
        android:id="@+id/pagingListView"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        app:swipeRefreshIndicatorColor="@color/colorAccent"
        app:scrollbarVisible="true"
        app:dividerVisible="true" />

</LinearLayout>

- Adapter:

public class DemoListAdapter<T> extends PagingListAdapter<T> {

    private MainActivity mainActivity;
    private int itemLayoutRes;
    private ArrayList<T> itemList;

    public DemoListAdapter(MainActivity mainActivity, int itemLayoutRes, ArrayList<T> itemList) {
        super(mainActivity, itemLayoutRes, itemList);
        this.mainActivity = mainActivity;
        this.itemLayoutRes = itemLayoutRes;
        this.itemList = itemList;
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        ViewHolder holder = null;

        if (convertView == null) {
            convertView = mainActivity.getLayoutInflater().inflate(itemLayoutRes, parent, false);

            holder = new ViewHolder();
            holder.text = (TextView) convertView.findViewById(R.id.text);

            convertView.setTag(holder);

        } else {
            holder = (ViewHolder) convertView.getTag();
        }

        String text = (String) itemList.get(position);
        if (text != null) {
            holder.text.setText(text);
        }

        return convertView;
    }

    @Override
    public void onNewLoadRequired() {
        mainActivity.loadNewItems();
    }

    @Override
    public void onRefresh() {
        mainActivity.refreshList();
    }

    @Override
    public void onItemClick(int position) {
        mainActivity.clickItem(position);
    }

    @Override
    public void onItemLongClick(int position) {
        mainActivity.longClickItem(position);
    }


    static class ViewHolder {
        TextView text;
    }

}

- Activity, fragment:

public class MainActivity extends AppCompatActivity {

    private final int ITEM_COUNT_TO_LOAD = 25;
    private final int ITEM_COUNT_LIMIT = 200;
    private final int TIME_TO_LOAD = 1500; //in ms

    private int itemOffset = 0;

    private LinearLayout container;
    private PagingListView PagingListView;

    private View loadingView;
    private ArrayList<String> itemList;
    private DemoListAdapter adapter;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        container = (LinearLayout) findViewById(R.id.container);
        PagingListView = (PagingListView) findViewById(R.id.PagingListView);

        itemList = new ArrayList<>();
        adapter = new DemoListAdapter(this, R.layout.item_text, itemList);

        loadingView = getLayoutInflater().inflate(R.layout.item_loading, null);

        PagingListView.init(adapter, loadingView);

        loadNewItems();
    }

    //SIMULATES ITEM LOADING
    public void loadNewItems() {
        new AsyncTask<Void, Void, Void>() {
            @Override
            protected void onPreExecute() {
                PagingListView.startLoading();
            }

            @Override
            protected Void doInBackground(Void... params) {
                try {
                    Thread.sleep(TIME_TO_LOAD);
                } catch (InterruptedException exception) {
                    exception.printStackTrace();
                }
                return null;
            }

            @Override
            protected void onPostExecute(Void param) {
                if(itemOffset >= ITEM_COUNT_LIMIT) {
                    PagingListView.hasMore(false);
                }
                else {
                    //ADD NEW ITEMS TO LIST
                    for (int i = itemOffset; i < itemOffset + ITEM_COUNT_TO_LOAD; i++) {
                        String item = "Item #" + i;
                        PagingListView.addNewItem(item);
                    }
                    itemOffset += ITEM_COUNT_TO_LOAD;
                    Log.d("PagingListView", "Current item count = " + itemOffset);

                    PagingListView.hasMore(true);
                }

                PagingListView.stopLoading();
            }
        }.execute();
    }

    //DO THIS ON SWIPE-REFRESH
    public void refreshList() {
        itemOffset = 0;
        PagingListView.clearList();
        loadNewItems();
    }

    //DO THIS ON ITEM CLICK
    public void clickItem(int position) {
        Snackbar.make(container, "Item clicked: " + position, Snackbar.LENGTH_SHORT).show();
    }

    //DO THIS ON ITEM LONG-CLICK
    public void longClickItem(int position) {
        Snackbar.make(container, "Item long-clicked: " + position, Snackbar.LENGTH_SHORT).show();
    }

}